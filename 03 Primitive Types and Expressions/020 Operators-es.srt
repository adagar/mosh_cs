1
00:00:03,140 --> 00:00:13,500
OK, vamos a los operadores y C-Sharp tenemos cinco tipos de operadores asignacin de comparacin aritmtica lgica y bit

2
00:00:13,770 --> 00:00:14,910
a bit.

3
00:00:15,300 --> 00:00:19,500
Echemos un vistazo ms de cerca a cada uno de estos operadores.

4
00:00:19,500 --> 00:00:24,660
Usamos operadores aritmticos en clculos donde trabajamos con nmeros.

5
00:00:24,720 --> 00:00:33,110
Entonces, como ven en la diapositiva, hemos sumado restar multiplicar divisin y resto de divisin.

6
00:00:33,660 --> 00:00:40,410
Tambin tenemos 2 operadores aritmticos llamados incrementos y decrementos que son accesos directos o que

7
00:00:40,470 --> 00:00:43,970
suman uno o restan uno de una variable.

8
00:00:44,100 --> 00:00:49,680
Entonces A-plus plus es equivalente a a es igual a a ms uno.

9
00:00:49,680 --> 00:00:54,260
Ahora con este operador de incremento y decremento hay dos formas de aplicarlos.

10
00:00:54,600 --> 00:00:56,370
Puede usarlos como un postfijo.

11
00:00:56,700 --> 00:00:59,570
Entonces en este ejemplo uno de uso.

12
00:00:59,670 --> 00:01:07,170
Y cuando aplicamos el operador de incremento postfix primero, el valor de a se asigna para que as

13
00:01:07,170 --> 00:01:11,990
sea, va a ser 1 y luego 8 se incrementa en 1.

14
00:01:12,000 --> 00:01:19,470
Entonces en este ejemplo despus de que se ejecute la segunda lnea, va a ser 2 y B va a ser 1.

15
00:01:19,470 --> 00:01:25,400
Ahora echemos un vistazo a una forma diferente de aplicar el operador de incremento como un prefijo.

16
00:01:25,410 --> 00:01:34,170
Entonces, en este ejemplo, la segunda lnea primero se incrementa en 1 y luego se asigna a ser.

17
00:01:34,170 --> 00:01:38,180
Entonces, despus de la segunda lnea, tanto A como B van a ser 2.

18
00:01:38,640 --> 00:01:42,240
As que ten en cuenta esta diferencia.

19
00:01:42,260 --> 00:01:44,730
OK, los prximos operadores de comparacin.

20
00:01:45,150 --> 00:01:53,580
As que obtuvimos el igual que se indica con el doble signo igual que no es igual a mayor que o

21
00:01:53,580 --> 00:01:57,860
igual a menor que y menor que o igual a.

22
00:01:57,930 --> 00:02:03,540
Ahora, a lo que quiero que presten atencin en esta lista es que las pruebas de igualdad

23
00:02:03,540 --> 00:02:05,650
se logran mediante el doble signo igual.

24
00:02:05,940 --> 00:02:13,110
Y eso es diferente de un solo igual que es el operador de asignacin siguiente operadores de asignacin.

25
00:02:13,920 --> 00:02:17,690
Entonces, el ms comnmente usado es el que tiene un solo signo igual.

26
00:02:17,700 --> 00:02:19,710
Entonces aqu dijimos ocho a uno.

27
00:02:19,860 --> 00:02:21,410
Bastante bsico.

28
00:02:21,450 --> 00:02:28,200
Ahora observe los siguientes cuatro tipos de operadores de asignacin: asignacin de multiplicacin de asignacin de

29
00:02:28,200 --> 00:02:31,290
resta de asignacin y asignacin de divisin.

30
00:02:31,290 --> 00:02:32,910
Veamos cmo funcionan.

31
00:02:32,940 --> 00:02:39,960
Por ejemplo, la asignacin de suma a ms igual a tres significa agregar tres a ocho.

32
00:02:40,050 --> 00:02:47,340
Por lo tanto, equivale a escribir a igual a a ms tres y la misma regla se aplica a

33
00:02:47,340 --> 00:02:55,770
otros operadores de asignacin. Los operadores lgicos se usan en expresiones booleanas que a menudo se utilizan en sentencias condicionales y

34
00:02:56,290 --> 00:02:59,790
llegarn a sentencias condicionales ms adelante en este curso.

35
00:02:59,790 --> 00:03:06,310
Entonces, un ejemplo del mundo real es donde tienes una condicin y quieres asegurarte de que esa condicin

36
00:03:06,330 --> 00:03:08,220
y otra condicin sean verdaderas.

37
00:03:08,280 --> 00:03:10,050
O tal vez uno de ellos es verdad.

38
00:03:10,530 --> 00:03:18,030
Entonces, ah es donde usa un operador lgico en C Sharp, el lgico, y est indicado por doble ampersand

39
00:03:18,450 --> 00:03:22,640
y el lgico o se implementa por doble lnea vertical.

40
00:03:23,250 --> 00:03:28,500
Tambin tenemos el operador not que se indica con un signo de exclamacin.

41
00:03:28,710 --> 00:03:35,310
Y, por ltimo, aqu tenemos los operadores bit a bit. Los operadores bit a bit se usan a menudo en programacin

42
00:03:35,880 --> 00:03:43,560
de bajo nivel, como cuando se trabaja con API de Windows o en sockets o la explicacin encriptada de estos est ms all del alcance

43
00:03:43,560 --> 00:03:44,570
de este curso.

44
00:03:44,700 --> 00:03:48,150
Pero si ests interesado, hzmelo saber y escribo una publicacin de blog para ti.

45
00:03:48,270 --> 00:03:54,900
Ahora lo que quiero que retires aqu es que el bit a bit y est indicado por un solo

46
00:03:54,900 --> 00:04:00,710
signo, mientras que el final lgico que usamos en los enunciados condicionales est indicado por doble ampersand.

47
00:04:00,840 --> 00:04:02,170
Lo mismo para O a nivel de bit.

48
00:04:02,280 --> 00:04:03,990
Y lgico o.

49
00:04:03,990 --> 00:04:06,090
As que recuerda la diferencia.

50
00:04:06,090 --> 00:04:10,780
OK, en teora, pasemos a Visual Studio y veamos todos estos conceptos en accin

