1
00:00:01,380 --> 00:00:06,690
Escribir esto para ti. Te mostrar cmo trabajar con listas o con listas genricas

2
00:00:06,810 --> 00:00:08,160
ms precisas y C-sharp.

3
00:00:08,190 --> 00:00:11,680
As que vamos a crear una lista.

4
00:00:12,130 --> 00:00:18,900
Usamos el nuevo operador para inicializar una instancia de la clase de lista.

5
00:00:19,440 --> 00:00:26,130
Tenga en cuenta los corchetes angulares aqu en el intellisense que indica que la lista es un tipo genrico.

6
00:00:26,400 --> 00:00:32,610
Tambin s que est definido en el sistema que las colecciones genricas, si no tienes un RRE ms ntido

7
00:00:32,690 --> 00:00:35,510
que Intellisense, vers que va a ser diferente.

8
00:00:35,640 --> 00:00:42,670
No creo que vayas a ver el espacio de nombres, lo que significa que tienes que ir

9
00:00:42,690 --> 00:00:49,020
en la parte superior del archivo y escribir usando el sistema que las colecciones son genricas.

10
00:00:49,200 --> 00:00:54,930
Una vez que importa el espacio de nombres, puede venir y crear una lista.

11
00:00:55,230 --> 00:00:57,230
Usted especifica un tipo aqu.

12
00:00:57,360 --> 00:01:00,970
Entonces, digamos que nos gustara crear una lista de enteros.

13
00:01:01,350 --> 00:01:08,100
Eso es todo, podemos inicializar esta lista con anticipacin utilizando la sintaxis de inicializacin de objetos.

14
00:01:08,100 --> 00:01:14,770
As que voy a proporcionar uno dos tres cuatro aqu.

15
00:01:14,970 --> 00:01:17,020
Ahora podemos agregar algo a esta lista.

16
00:01:17,240 --> 00:01:19,400
Entonces los nmeros comienzan en.

17
00:01:20,070 --> 00:01:21,930
Yo agregara otro aqu.

18
00:01:22,590 --> 00:01:26,430
Esta es la diferencia entre una lista y una matriz en una matriz.

19
00:01:26,430 --> 00:01:32,600
No tenemos un mtodo Agregar y una vez que creamos la matriz, no se puede cambiar el tamao de la

20
00:01:32,600 --> 00:01:36,000
matriz, pero en una lista puede agregar tantos objetos como desee.

21
00:01:36,000 --> 00:01:40,230
Tambin podemos usar el mtodo Agregar rango para agregar ms de un objeto a la lista.

22
00:01:40,230 --> 00:01:44,520
Entonces los nmeros no agregan rango.

23
00:01:44,610 --> 00:01:51,130
Y tenga en cuenta que en el intellisense aqu lo vemos en su Mirable de INT. Qu es enumerable?

24
00:01:51,270 --> 00:01:58,860
Bueno, antes que nada, cuando veas un tipo que tiene el prefijo I que es una interfaz, he cubierto las interfaces

25
00:01:58,860 --> 00:02:02,170
en detalle en la segunda parte de este curso.

26
00:02:02,580 --> 00:02:05,000
As que, por ahora, queremos mantener las cosas simples.

27
00:02:05,130 --> 00:02:06,870
Quiero darte un consejo rpido aqu.

28
00:02:07,170 --> 00:02:14,610
Cada vez que vea enumerable en el intellisense sincerer puede usar una matriz o una lista all.

29
00:02:14,730 --> 00:02:20,610
Una vez que comprenda las interfaces en la segunda parte de este curso, se dar cuenta de

30
00:02:20,670 --> 00:02:26,910
que esa interfaz est implementada por diferentes clases como la matriz o la lista, lo que significa que cada

31
00:02:27,390 --> 00:02:32,080
vez que vea enumerable puede proporcionar una instancia de una clase que implementa enumerable.

32
00:02:32,100 --> 00:02:34,680
Ahora si todo eso suena demasiado complejo, no te preocupes.

33
00:02:34,800 --> 00:02:36,050
De nuevo, recuerda mi consejo.

34
00:02:36,120 --> 00:02:42,490
Cada vez que vea enumerable, puede usar una matriz o una lista para que creemos una matriz aqu.

35
00:02:42,810 --> 00:02:44,790
Nueva Interrail.

36
00:02:45,030 --> 00:02:51,510
Voy a especificar el tamao de tres y puedo usar la sintaxis de

37
00:02:51,510 --> 00:02:57,680
inicializacin de objetos para inicializar inmediatamente el historial o 8 5 6 7.

38
00:02:57,720 --> 00:03:03,510
Ahora es muy poco probable que vayas a escribir cdigo como este en una aplicacin del mundo real, as que

39
00:03:03,510 --> 00:03:07,090
no te dejes intimidar por esta forma extraa de inicializar una lista.

40
00:03:07,110 --> 00:03:12,010
Todo lo que quiero mostrarle aqu es el nmero de posibilidades cuando trabajo con listas.

41
00:03:12,130 --> 00:03:13,740
No tienes que memorizar nada.

42
00:03:13,770 --> 00:03:20,250
Todo lo que quiero que lleves aqu es una idea de lo que puedes hacer con una lista para que puedas crear una

43
00:03:20,550 --> 00:03:21,410
lista como aqu.

44
00:03:21,600 --> 00:03:26,260
Puede inicializarlo de antemano si conoce los objetos que desea almacenar all.

45
00:03:26,340 --> 00:03:32,610
Puede llamar al mtodo add para agregar un objeto a una lista o puede llamar agregar rango para

46
00:03:33,060 --> 00:03:36,030
agregar otra lista o una matriz a la lista.

47
00:03:36,030 --> 00:03:37,710
Ahora, una vez que tenemos una lista, podemos.

48
00:03:37,710 --> 00:03:49,340
Lo intent usando un ciclo para cada ciclo as que para cada nmero de barra en nmeros, cancela el nmero de lnea correcto.

49
00:03:50,190 --> 00:03:53,510
Vamos a ejecutar la aplicacin.

50
00:03:55,170 --> 00:04:01,200
Entonces tenemos 1 2 3 4 1 5 6 7.

51
00:04:01,200 --> 00:04:05,040
Ahora echemos un vistazo al ndice de mtodo.

52
00:04:06,570 --> 00:04:12,930
As que los nmeros dot index de este mtodo como algunas sobrecargas diferentes.

53
00:04:12,930 --> 00:04:15,450
El ms simple que es el que est actualmente resaltado.

54
00:04:15,450 --> 00:04:22,200
Significa que puede presionar un elemento de tipo entero aqu y este mtodo devuelve el ndice de

55
00:04:22,200 --> 00:04:27,380
ese objeto en la lista si existe, de lo contrario, devuelve menos uno.

56
00:04:27,630 --> 00:04:34,170
La segunda sobrecarga de este mtodo toma otro parmetro llamado ndice y ese es el punto de partida.

57
00:04:34,470 --> 00:04:42,600
Por lo tanto, puede decir bsqueda o bsqueda desde el ndice 3 y la tercera sobrecarga de este mtodo especifica la cantidad

58
00:04:42,600 --> 00:04:45,340
de objetos para incluir en la bsqueda.

59
00:04:45,420 --> 00:04:49,170
La primera sobrecarga es lo que usaras la mayor parte del tiempo.

60
00:04:49,170 --> 00:04:56,100
As que vamos a ver el ndice de uno que se mostrar en la consola.

61
00:04:59,120 --> 00:05:01,020
Djame agregar una etiqueta aqu.

62
00:05:01,220 --> 00:05:05,540
Entonces ndice de uno.

63
00:05:06,960 --> 00:05:13,450
Y me gustara tener un concierto en la lnea derecha aqu para separarlo de nuestro ciclo.

64
00:05:14,660 --> 00:05:18,160
As que Enochs de uno es cero.

65
00:05:18,650 --> 00:05:21,890
Pero curiosamente tenemos dos aqu.

66
00:05:21,890 --> 00:05:23,090
Aqu est el primero.

67
00:05:23,210 --> 00:05:25,490
Y aqu est el segundo.

68
00:05:25,490 --> 00:05:31,810
Tenemos otro mtodo llamado ltimo ndice de echemos un vistazo a ese.

69
00:05:32,450 --> 00:05:42,680
As que voy a duplicar esta lnea y, en su lugar, utilizar el ltimo ndice de una ejecutamos la aplicacin.

70
00:05:45,520 --> 00:05:49,910
Entonces, el ltimo o uno es cuatro.

71
00:05:50,390 --> 00:05:54,110
Por lo tanto, es posible que desee comenzar su bsqueda desde el principio de la lista.

72
00:05:54,140 --> 00:05:56,520
En ese caso, usa el ndice del mtodo.

73
00:05:56,660 --> 00:06:02,300
A veces puede comenzar su bsqueda desde el final de la lista cuando en el mundo real sucede eso.

74
00:06:02,840 --> 00:06:08,450
Realmente no puedo decrtelo ahora porque realmente depende del algoritmo que ests diseando.

75
00:06:08,510 --> 00:06:21,340
Ahora echemos un vistazo a otro miembro til del recuento de la clase de la lista, por lo tanto, cuente el nmero de puntos.

76
00:06:21,380 --> 00:06:25,560
Entonces esta es una propiedad que devuelve la cantidad de objetos en la lista.

77
00:06:25,940 --> 00:06:28,240
Vamos a ejecutar la aplicacin.

78
00:06:29,540 --> 00:06:34,480
Entonces actualmente tenemos 8 objetos en la lista.

79
00:06:34,490 --> 00:06:38,080
Ahora echemos un vistazo al mtodo Remove.

80
00:06:40,130 --> 00:06:48,220
Entonces los nmeros eliminan. Voy a eliminar uno de la lista.

81
00:06:48,260 --> 00:06:52,810
Ahora iteremos de nuevo en la lista y observemos el resultado despus de eliminar uno.

82
00:06:52,910 --> 00:06:58,300
As que voy a copiar esto para cada bloque y poner eso aqu.

83
00:06:58,310 --> 00:07:01,610
Ahora ejecutemos la aplicacin.

84
00:07:03,890 --> 00:07:09,550
As que ten en cuenta que el primero se ha ido, pero todava tenemos otro.

85
00:07:09,560 --> 00:07:13,720
Qu sucede si quiere eliminar todos los que estn en esta lista?

86
00:07:13,760 --> 00:07:18,690
Entonces, una forma de hacerlo es usar el look for ish.

87
00:07:20,240 --> 00:07:22,910
As que cambiemos este ejemplo a algo como esto.

88
00:07:30,570 --> 00:07:33,520
Trat de enumerar un objeto a la vez.

89
00:07:33,860 --> 00:07:36,560
Verificamos si el nmero es 1.

90
00:07:37,010 --> 00:07:41,070
Entonces muy mover nmero.

91
00:07:43,370 --> 00:07:46,790
Una vez que hacemos eso, copiemos esto para cada ciclo nuevamente

92
00:07:49,700 --> 00:07:51,040
y pongamos eso aqu.

93
00:07:51,890 --> 00:07:53,010
Vamos a ejecutar la

94
00:07:56,270 --> 00:07:57,580
aplicacin de aplicacin se colg.

95
00:07:57,750 --> 00:08:01,370
Por qu ser bueno y excepcin no controlada?

96
00:08:01,650 --> 00:08:03,910
Yo aqu.

97
00:08:03,980 --> 00:08:09,290
Esta es una excepcin o un error que puede ver de vez en cuando cuando elimina un

98
00:08:09,290 --> 00:08:12,380
objeto de una lista dentro de a para cada bloque.

99
00:08:12,380 --> 00:08:14,580
As que mira los detalles de la excepcin aqu.

100
00:08:14,790 --> 00:08:18,330
Es de tipo sistema a una excepcin de operacin no vlida.

101
00:08:18,560 --> 00:08:25,340
Y el mensaje dice que la coleccin fue modificada. La operacin de enumeracin puede no ejecutarse.

102
00:08:25,340 --> 00:08:33,050
Entonces, qu significa esto? En C-sharp no tenemos permitido modificar nuestra coleccin dentro de a para cada ciclo.

103
00:08:33,740 --> 00:08:40,030
Entonces, dentro de este bloque de 4 bloques, tenemos estos nmeros que se eliminan y que se modifican para su recoleccin.

104
00:08:40,070 --> 00:08:46,220
Entonces, cmo podemos cambiar este programa para obtener el resultado deseado sin esa excepcin?

105
00:08:46,460 --> 00:08:48,470
Necesitamos usar un ciclo for normal.

106
00:08:48,680 --> 00:08:55,210
Entonces algo como para var Y es cero.

107
00:08:55,220 --> 00:09:01,310
Ejecuta esto siempre que use menos que los nmeros que cuentan ms Bloss.

108
00:09:02,360 --> 00:09:07,720
Y movemos este cdigo aqu.

109
00:09:08,000 --> 00:09:11,630
Ahora aqu tenemos que cambiar eso a nmeros de.

110
00:09:12,140 --> 00:09:16,780
Porque no tenemos una variable local como esa para cada nmero llamado.

111
00:09:16,990 --> 00:09:17,690
Derecha.

112
00:09:17,750 --> 00:09:23,730
Entonces necesitamos acceder al elemento actual en la lista usando un nmero de ndice de por qu.

113
00:09:24,110 --> 00:09:28,670
OK, ejecutemos una aplicacin.

114
00:09:28,690 --> 00:09:29,070
Ah tienes.

115
00:09:29,090 --> 00:09:34,580
As que eliminamos los dos de la lista.

116
00:09:35,750 --> 00:09:38,330
Y un ltimo mtodo antes de terminar esta conferencia.

117
00:09:38,330 --> 00:09:43,270
As que echemos un vistazo a los nmeros claros del mtodo que estn claros.

118
00:09:43,340 --> 00:09:47,370
Entonces este mtodo elimina todos los elementos de la lista.

119
00:09:47,840 --> 00:09:51,390
Ahora, si una pantalla cuenta en la consola, obtendremos cero.

120
00:09:51,440 --> 00:09:58,250
As que voy a tomar esta lnea aqu y pegarla aqu.

121
00:09:58,400 --> 00:10:03,040
Entonces mira que el ltimo conteo es 0.

122
00:10:04,490 --> 00:10:08,500
As que esta fue una introduccin al tipo de cosas que puedes hacer con la lista.

123
00:10:08,570 --> 00:10:11,080
Espero que hayan disfrutado esta conferencia y gracias por mirar.

