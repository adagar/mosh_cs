1
00:00:04,200 --> 00:00:08,140
Anteriormente en este curso aprendemos un poco sobre la raza en esta conferencia.

2
00:00:08,160 --> 00:00:10,730
Vamos a echar un vistazo ms profundo a la raza.

3
00:00:10,740 --> 00:00:15,900
As que primero voy a tener una revisin rpida de las matrices y luego voy a hablar sobre los diferentes

4
00:00:15,900 --> 00:00:17,540
tipos de matrices que tenemos en C-sharp.

5
00:00:17,610 --> 00:00:23,120
Y finalmente voy a presentar algunos mtodos tiles para trabajar con matrices.

6
00:00:23,130 --> 00:00:30,410
Entonces, para refrescar nuestra mente, una matriz representa un nmero fijo de variables de un tipo particular en C-sharp

7
00:00:30,420 --> 00:00:32,550
tenemos dos tipos de matrices.

8
00:00:32,730 --> 00:00:37,760
Arrays de dimensin nica y raza multidimensional como una matriz.

9
00:00:38,310 --> 00:00:42,440
As que las matrices de una sola dimensin es lo que has visto antes en este ejemplo.

10
00:00:42,480 --> 00:00:47,610
Tenemos una matriz de nmeros enteros llamados nmeros y la longitud de esta matriz es cinco.

11
00:00:47,850 --> 00:00:53,130
Si conocemos con anticipacin los valores que nos gustara almacenar en una matriz, podemos usar la sintaxis de

12
00:00:53,130 --> 00:00:55,230
inicializacin de objetos para inicializar esa matriz.

13
00:00:55,230 --> 00:00:57,090
Sobre la declaracin.

14
00:00:57,090 --> 00:00:58,860
Entonces nada nuevo hasta ahora.

15
00:00:58,860 --> 00:01:03,310
Ahora echemos un vistazo a los tipos de raza multidimensional.

16
00:01:03,780 --> 00:01:09,200
Tenemos dos tipos de matrices multidimensionales en C Sharp raza rectangular y dentada.

17
00:01:09,600 --> 00:01:14,710
Entonces, con una matriz rectangular, cada fila tiene exactamente el mismo nmero de columnas.

18
00:01:14,790 --> 00:01:19,890
Entonces, en el ejemplo que ve en las diapositivas, tenemos una matriz de tres filas y cada fila tiene cinco columnas

19
00:01:20,760 --> 00:01:21,640
con una matriz irregular.

20
00:01:21,640 --> 00:01:28,050
Sin embargo, el nmero de columnas en cada fila puede ser diferente, una forma diferente de ver Jack

21
00:01:28,050 --> 00:01:30,260
array es una matriz de matrices.

22
00:01:31,050 --> 00:01:36,240
As que puedes pensar en la matriz Jack que tenemos en esta diapositiva como una matriz

23
00:01:36,240 --> 00:01:41,040
dimensional nica con tres elementos y cada elemento es otra matriz de dimensin nica.

24
00:01:41,040 --> 00:01:42,210
Ahora, cul es la diferencia?

25
00:01:42,270 --> 00:01:49,530
Cundo usamos una matriz rectangular o una matriz irregular en dot net? CLR est optimizada en torno a matrices de

26
00:01:49,530 --> 00:01:50,340
una dimensin.

27
00:01:50,490 --> 00:01:57,450
Entonces, digamos que quieres modelar una matriz, es ms rpido implementarla usando una matriz jack que una

28
00:01:57,450 --> 00:01:58,370
Arri rectangular.

29
00:01:58,390 --> 00:02:01,100
Quiero decir que dijiste que la diferencia podra ser muy pequea.

30
00:02:01,140 --> 00:02:03,700
Especialmente con las computadoras que tenemos estos das.

31
00:02:03,720 --> 00:02:08,670
As que mi consejo pragmtico para usted es que no se quede atascado demasiado acerca de la diferencia entre

32
00:02:08,670 --> 00:02:09,390
rectangular y maloliente.

33
00:02:09,390 --> 00:02:13,800
Solo tenga en cuenta que en el futuro tenemos dos tipos de raza multidimensional.

34
00:02:13,830 --> 00:02:16,790
Ahora veamos cmo podemos declarar una matriz rectangular.

35
00:02:17,280 --> 00:02:22,870
As que aqu est la sintaxis para declarar una matriz rectangular bidimensional.

36
00:02:22,950 --> 00:02:28,500
Entonces, lo nico nuevo que ves aqu es que en los corchetes necesitamos especificar las

37
00:02:28,500 --> 00:02:29,480
dimensiones del rbol.

38
00:02:29,490 --> 00:02:35,680
Entonces, en este caso, esta matriz tiene tres filas y cada fila tiene cinco columnas.

39
00:02:35,940 --> 00:02:40,980
Si conoce los valores, nos gustar agitar este conjunto antes de tiempo, podemos inicializar

40
00:02:41,160 --> 00:02:44,550
este conjunto utilizando la sintaxis de inicializacin de objetos.

41
00:02:45,800 --> 00:02:50,370
Y si quiere acceder a un elemento en desorden como antes usamos los corchetes.

42
00:02:50,460 --> 00:02:57,060
Pero necesitamos suministrar el ndice de la fila y la columna si queremos declarar una

43
00:02:57,060 --> 00:02:57,740
matriz tridimensional.

44
00:02:57,750 --> 00:03:03,500
Podemos extender el ejemplo anterior y suministrar tres dimensiones al declarar la matriz.

45
00:03:03,510 --> 00:03:08,090
Entonces, en este ejemplo, nuestra matriz de colores tiene tres dimensiones.

46
00:03:09,150 --> 00:03:11,160
Ahora echemos un vistazo a la fragilidad.

47
00:03:11,160 --> 00:03:14,580
Imaginemos que queremos modelar una matriz que se vea as.

48
00:03:14,580 --> 00:03:19,000
Entonces, como expliqu anteriormente, puede pensar en este conjunto como una matriz de matrices.

49
00:03:19,380 --> 00:03:25,000
Por lo tanto, en un nivel superior, tienen una matriz de tres dimensiones en cada elemento.

50
00:03:25,020 --> 00:03:27,530
Tenemos otra referencia dimensional nica.

51
00:03:27,630 --> 00:03:32,760
Entonces, en nuestro primer elemento, tenemos una matriz de cuatro elementos en el segundo elemento.

52
00:03:32,760 --> 00:03:34,760
Tenemos una matriz de cinco elementos.

53
00:03:34,830 --> 00:03:36,480
Entonces, cmo implementamos esto?

54
00:03:36,480 --> 00:03:42,430
Bueno, primero tenemos que declarar una matriz de nivel superior, no la sintaxis aqu.

55
00:03:42,510 --> 00:03:49,980
Usamos dos corchetes para representarlo en los primeros corchetes en los que especifica el nmero de elementos

56
00:03:49,980 --> 00:03:52,260
en su matriz de niveles.

57
00:03:52,800 --> 00:03:59,290
Ahora necesitamos inicializar cada elemento de esta matriz en una matriz diferente.

58
00:03:59,580 --> 00:04:07,080
Entonces, se supone que debemos encontrar que el primer elemento de esta matriz es otra matriz entera de tamao 4 y para acceder

59
00:04:07,080 --> 00:04:08,850
a un elemento en esta matriz.

60
00:04:08,850 --> 00:04:11,380
De nuevo, necesitamos agregar corchetes.

61
00:04:11,670 --> 00:04:16,530
Entonces, la diferencia entre la matriz Jagd y la matriz rectangular desde el mismo

62
00:04:16,890 --> 00:04:23,670
punto de vista tctico es que tenemos dos corchetes, mientras que con la matriz rectangular tenemos un corchete cuadrado.

63
00:04:23,850 --> 00:04:28,820
Pero separamos las dimensiones usando una coma en C-sharp.

64
00:04:28,890 --> 00:04:35,150
Todas las matrices se asignan al tipo de matriz que se define en el espacio de nombres del sistema de Doc net framework.

65
00:04:35,460 --> 00:04:41,500
Entonces, el tipo de matriz es una clase, tiene un conjunto de propiedades y mtodos, como puede ver en esta diapositiva.

66
00:04:42,090 --> 00:04:42,300
DE ACUERDO.

67
00:04:42,300 --> 00:04:46,620
Ahora pasemos a Visual Studio y veamos todos estos conceptos en accin.

