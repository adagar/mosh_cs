1
00:00:03,530 --> 00:00:11,340
In C-sharp we also have another type similar to classes which is called structure or struct.

2
00:00:11,520 --> 00:00:15,240
So in terms of syntax it's very similar to a class.

3
00:00:15,510 --> 00:00:20,310
The only difference is in sort of using the class keyword we use the struct keyword.

4
00:00:21,150 --> 00:00:27,510
So similar to classes structures combine related fields and methods together.

5
00:00:27,510 --> 00:00:31,890
But what is the difference if I read the C-sharp documentation.

6
00:00:31,890 --> 00:00:37,410
You're going to see lots of tiny differences between classes and structures and you're probably going

7
00:00:37,410 --> 00:00:41,150
to be even more confused than when you started.

8
00:00:41,160 --> 00:00:44,540
I personally don't find these subtle differences very pragmatic.

9
00:00:44,790 --> 00:00:51,630
In fact in the real world 99 percent of the time you will create new types using classes not structures

10
00:00:51,630 --> 00:00:52,880
.

11
00:00:52,920 --> 00:00:59,220
The pragmatic guideline I give you in this lecture is use structure when you want to define a small

12
00:00:59,280 --> 00:01:01,080
lightweight object like this.

13
00:01:01,080 --> 00:01:07,950
RG recolor here or if you're dealing with something like a point that has an X and a Y you can certainly

14
00:01:07,950 --> 00:01:09,600
define that using a class.

15
00:01:09,600 --> 00:01:10,970
There is no problem at all.

16
00:01:11,310 --> 00:01:17,280
But if you're in a situation when you want to create thousands or tens of thousands of objects of that

17
00:01:17,280 --> 00:01:21,350
type it's more efficient to define them as a structure.

18
00:01:21,360 --> 00:01:22,830
If not don't worry about it.

19
00:01:22,860 --> 00:01:27,160
Just stick to classes because that's what you use most of the time.

