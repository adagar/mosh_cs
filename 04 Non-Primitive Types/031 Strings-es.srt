1
00:00:03,970 --> 00:00:09,000
OK en este video vamos a tener una introduccin rpida a las cadenas para que pueda comenzar rpidamente.

2
00:00:09,660 --> 00:00:14,880
Y ms adelante en el curso, tenemos una seccin separada donde cubriremos ms detalles sobre cadenas.

3
00:00:14,940 --> 00:00:18,030
Entonces en esta conferencia voy a cubrir lo que es una cuerda.

4
00:00:18,030 --> 00:00:20,750
Diferentes formas de crear cadenas y seguro.

5
00:00:20,760 --> 00:00:26,980
Y finalmente voy a hablar sobre personajes de escape y cadenas textuales que son bastante tiles.

6
00:00:27,600 --> 00:00:33,840
Entonces, si string es una secuencia de caracteres y como puede ver en este ejemplo en

7
00:00:33,840 --> 00:00:41,520
C-sharp, las cadenas envolventes con comillas dobles en oposicin a los caracteres que estn rodeados por comillas simples hay diferentes

8
00:00:41,520 --> 00:00:47,490
maneras de crear cadenas y compartir una forma muy comn. para usar una cadena literal.

9
00:00:47,610 --> 00:00:50,430
Entonces, al igual que declarar un viable comenzamos con un tipo.

10
00:00:50,430 --> 00:00:53,380
Y en este caso cadena, entonces un identificador.

11
00:00:53,520 --> 00:00:56,790
Y finalmente lo asignamos a un literal de cadena.

12
00:00:57,910 --> 00:01:02,190
Tambin puede concatenar cadenas utilizando el operador ms.

13
00:01:02,280 --> 00:01:08,490
Entonces, en este ejemplo, estoy agregando un nombre ms un literal de cadena que representa un carcter vaco.

14
00:01:08,550 --> 00:01:10,420
Y finalmente el apellido.

15
00:01:11,010 --> 00:01:15,540
A veces, el uso de la concatenacin de cadenas de esta manera puede crear un poco de ruido en tu cdigo.

16
00:01:15,900 --> 00:01:21,240
Puede tener diferentes variables de cadena con las que est concatenndose y es difcil visualizar cmo

17
00:01:21,240 --> 00:01:22,540
se ve la salida.

18
00:01:22,800 --> 00:01:26,520
Si ese es el caso, puede usar el formato de cadena.

19
00:01:26,520 --> 00:01:33,450
As que en C-sharp esta palabra potable se asigna a la clase String en Dot Net Framework y aprendes que las

20
00:01:33,450 --> 00:01:39,810
clases pueden tener campos y mtodos y podemos declarar a estos miembros como estticos, lo que significa que podemos

21
00:01:39,810 --> 00:01:44,220
acceder directamente a ellos en la clase sin necesidad para crear un objeto

22
00:01:44,250 --> 00:01:50,760
Por lo tanto, en el ejemplo que ve aqu, recordar el mtodo de formateo en el formato de clase de cadena es

23
00:01:50,760 --> 00:01:51,490
un mtodo esttico.

24
00:01:51,690 --> 00:01:55,300
Entonces podemos acceder directamente utilizando el formato de punto de cadena.

25
00:01:55,410 --> 00:01:58,170
Este mtodo toma un par de parmetros.

26
00:01:58,230 --> 00:02:04,810
El primero es una cadena de formato que usamos para definir una plantilla para una cadena dentro de esta plantilla.

27
00:02:04,860 --> 00:02:11,820
Tenemos marcadores de posicin. Los marcadores de posicin estn indicados con llaves y estn prximos a Ziering.

28
00:02:11,820 --> 00:02:17,580
As que aqu los marcadores de posicin cero sern reemplazados por el primer nombre y el marcador de

29
00:02:17,610 --> 00:02:19,230
posicin ser reemplazado por ltimo.

30
00:02:19,260 --> 00:02:25,230
Entonces, como puede ver en este ejemplo, es mucho ms fcil visualizar el resultado en lugar

31
00:02:25,230 --> 00:02:27,170
de concatenar mltiples cadenas juntas.

32
00:02:27,390 --> 00:02:30,020
A veces puede tener una variedad de objetos.

33
00:02:30,600 --> 00:02:36,510
Puede crear una cadena para combinar todos los elementos de esa matriz usando un separador.

34
00:02:36,510 --> 00:02:40,670
Entonces, en este ejemplo, tenemos una matriz de enteros con valores 1 2 3.

35
00:02:41,010 --> 00:02:47,720
Y en la segunda lnea estamos llamando al mtodo join de la clase String que es un mtodo

36
00:02:47,720 --> 00:02:49,680
esttico y proporcionamos dos argumentos.

37
00:02:49,800 --> 00:02:53,660
El primer argumento que es una cadena es un separador.

38
00:02:53,730 --> 00:02:58,060
En este caso, me gustara combinar los tres nmeros usando coma.

39
00:02:58,110 --> 00:03:04,150
El segundo argumento para este mtodo es la matriz cuyos elementos nos gustara combinar.

40
00:03:04,620 --> 00:03:10,880
Ahora que tenemos una cadena, podemos acceder a cada uno de sus caracteres individuales usando un ndice.

41
00:03:10,890 --> 00:03:16,950
Entonces, en este caso, el nombre de cero representa el primer carcter de nuestra cadena.

42
00:03:16,950 --> 00:03:22,560
Una cosa que debes saber sobre cadenas y C-Sharp es que las cadenas son inmutables, lo que significa

43
00:03:22,560 --> 00:03:25,350
que una vez que las creas no puedes cambiarlas.

44
00:03:25,410 --> 00:03:31,620
Volviendo a nuestro ejemplo, podemos leer el valor del primer carcter en nuestra cadena, pero

45
00:03:31,620 --> 00:03:32,840
no podemos cambiarlo.

46
00:03:33,150 --> 00:03:37,790
Entonces, la tercera lnea que se indica mediante lectura no se compilar.

47
00:03:37,980 --> 00:03:43,070
Hay mtodos en la clase String que nos permiten manipular cadenas y modificar sus valores.

48
00:03:43,380 --> 00:03:49,410
Pero todos estos mtodos devuelven una nueva cadena para que la cadena original no se

49
00:03:49,410 --> 00:03:52,720
modifique y eso es lo que significan inmutables.

50
00:03:52,830 --> 00:03:57,970
Hay algunos personajes especiales en C que a veces tienen diferentes significados.

51
00:03:58,020 --> 00:04:04,080
Por ejemplo, si desea tener una nueva lnea en la cadena, necesita usar una barra invertida, cuando

52
00:04:04,080 --> 00:04:10,680
el compilador la ve automticamente como una nueva lnea si no agrega la barra invertida, el compilador la ve

53
00:04:10,740 --> 00:04:17,130
y la letra N es igual para toca si quieres tener un tipo que uses barra invertida T.

54
00:04:17,400 --> 00:04:20,190
Ahora eso nos lleva a una situacin interesante.

55
00:04:20,280 --> 00:04:26,830
Qu sucede si usted quiere usar la letra de la barra invertida en s misma porque cuando el compilador ve una barra invertida cree

56
00:04:26,950 --> 00:04:30,650
que estamos usando un carcter especial, por lo que no es del todo seguro?

57
00:04:30,690 --> 00:04:32,250
Puede confundirse.

58
00:04:32,490 --> 00:04:37,860
Entonces, si queremos decirle al compilador que le gusta usar la letra de la barra

59
00:04:37,950 --> 00:04:43,710
invertida, tenemos que representar esa doble barra invertida de bytes para una comilla simple y comillas dobles.

60
00:04:43,770 --> 00:04:45,970
Necesitamos agregarles una barra diagonal inversa.

61
00:04:46,200 --> 00:04:49,180
Y eso es a lo que llamamos personajes de Scalling en C-sharp.

62
00:04:49,410 --> 00:04:51,810
Pero estos son personajes especiales.

63
00:04:51,930 --> 00:04:55,320
La lista de personajes especiales, de hecho, es incluso ms que eso.

64
00:04:55,470 --> 00:05:00,760
Pero personalmente no he encontrado ninguno de esos personajes especiales que encuentre en la bsqueda de documentacin.

65
00:05:00,780 --> 00:05:07,420
Los pragmticos que ves en esta tabla son los que he encontrado muy comunes.

66
00:05:08,070 --> 00:05:14,400
Ahora bien, debido a estos caracteres especiales, hay casos en los que la creacin de una cadena puede ser

67
00:05:14,400 --> 00:05:15,270
un poco desordenada.

68
00:05:15,480 --> 00:05:21,740
Por ejemplo, mire esta variable de ruta aqu, sepa que todas estas barras invertidas dobles la

69
00:05:21,780 --> 00:05:24,000
tenemos un poco desordenada, no?

70
00:05:24,000 --> 00:05:29,940
Lo bueno es, en resumen, tenemos un tipo de cadena que llamamos cadena literal y con

71
00:05:29,940 --> 00:05:38,340
una cadena literal no tenemos que usar todas estas barras invertidas dobles, simplemente podemos prefijar nuestra secuencia en el signo y, como resultado,

72
00:05:38,430 --> 00:05:44,360
podemos deshacernos de todo esto doble barras diagonales inversas y solo usa una sola barra diagonal inversa.

73
00:05:45,030 --> 00:05:45,600
DE ACUERDO.

74
00:05:45,600 --> 00:05:48,480
Ahora solo cambia a Visual Studio y haz algo de codificacin

