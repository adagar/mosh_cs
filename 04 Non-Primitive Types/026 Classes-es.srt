1
00:00:03,960 --> 00:00:10,260
Al principio de este curso, aprender que las clases son componentes bsicos de nuestras aplicaciones.

2
00:00:10,260 --> 00:00:15,730
Estas clases combinan variables relacionadas o campos y funciones en conjunto.

3
00:00:15,750 --> 00:00:17,480
As que aqu hay un ejemplo.

4
00:00:17,910 --> 00:00:24,300
En esta imagen tenemos una clase llamada persona con cuatro campos nombre edad, altura y peso.

5
00:00:24,550 --> 00:00:27,380
Y tambin tiene cuatro mtodos o cuatro funciones.

6
00:00:27,480 --> 00:00:30,940
Caminar hablar comer y dormir.

7
00:00:30,960 --> 00:00:35,690
Esta clase es un tipo o un plano a partir del cual creamos objetos.

8
00:00:35,940 --> 00:00:39,380
Entonces un objeto es una instancia de una clase.

9
00:00:39,540 --> 00:00:46,390
En este ejemplo, podemos crear tres instancias de esta clase de persona como John Murray y Scott.

10
00:00:46,650 --> 00:00:52,260
Entonces, con ms precisin cuando ejecuta su aplicacin, son estos objetos los que se comunican

11
00:00:52,260 --> 00:00:55,320
entre s y colaboran para proporcionar alguna funcionalidad.

12
00:00:55,620 --> 00:01:00,270
Pero la clase mundial y los objetos a menudo se usan indistintamente.

13
00:01:00,270 --> 00:01:03,840
Bien, ahora veamos cmo podemos crear una clase en C-sharp.

14
00:01:04,050 --> 00:01:11,250
Entonces, para crear una clase, comenzamos con un modificador de acceso y luego la palabra clave class y un identificador, un

15
00:01:11,250 --> 00:01:15,090
modificador de acceso que determina quin puede acceder a esta clase.

16
00:01:15,300 --> 00:01:19,920
Por ahora no te preocupes porque eso es algo que he cubierto en mi curso intermedio C-Sharp,

17
00:01:20,160 --> 00:01:22,320
que es la segunda parte de este curso.

18
00:01:22,350 --> 00:01:28,290
Recuerde siempre que quiera crear una clase use la palabra clave pblica para hacer que la clase est accesible

19
00:01:28,350 --> 00:01:30,430
en cualquier lugar de su aplicacin.

20
00:01:30,810 --> 00:01:35,880
Dentro de la clase de bloques de cdigo podemos tener variables que llamamos campos.

21
00:01:35,910 --> 00:01:40,180
Tambin tenga en cuenta que cuando declaramos una variable, necesitamos especificar un modificador de acceso.

22
00:01:40,410 --> 00:01:42,560
Nuevamente para todos los ejemplos en este curso.

23
00:01:42,570 --> 00:01:47,990
Nos mantendremos en pblico y en el prximo curso veremos otros modificadores de acceso.

24
00:01:47,990 --> 00:01:52,300
Tenga en cuenta que en C-sharp en cualquier lugar tiene una declaracin como una declaracin de variable aqu.

25
00:01:52,380 --> 00:01:57,360
Debe terminar esa declaracin con un punto y coma, pero no tiene que hacer eso cuando

26
00:01:57,360 --> 00:01:58,970
tenga un bloque de cdigo.

27
00:01:59,430 --> 00:02:02,380
Tus clases tambin pueden contener mtodos.

28
00:02:02,400 --> 00:02:04,830
Entonces aqu hay un ejemplo.

29
00:02:04,830 --> 00:02:11,160
En este ejemplo, el vaco es el tipo de devolucin o para introducir el mtodo, lo que significa que este

30
00:02:11,190 --> 00:02:12,830
mtodo no devuelve ningn valor.

31
00:02:13,050 --> 00:02:20,520
Y tambin tenga en cuenta que este mtodo no toma ningn promotor como lo indica el parntesis vaco, por lo que

32
00:02:20,520 --> 00:02:24,080
simplemente muestra el nombre de la persona en la consola.

33
00:02:24,720 --> 00:02:26,390
Aqu hay otro ejemplo.

34
00:02:26,700 --> 00:02:32,820
En este ejemplo, tenemos una clase de calculadora con un mtodo que toma dos parmetros de

35
00:02:33,030 --> 00:02:35,670
tipo entero y devuelve un nmero entero.

36
00:02:35,670 --> 00:02:39,410
Ahora que tenemos una clase, veamos cmo podemos crear un objeto.

37
00:02:39,420 --> 00:02:46,050
Entonces, antes aprendes que para declarar una variable comienzas con un tipo y luego un identificador que

38
00:02:46,050 --> 00:02:49,380
crea objetos o instancias de clases es bastante similar.

39
00:02:49,380 --> 00:02:51,690
Comenzamos con un tipo y un identificador.

40
00:02:51,810 --> 00:02:58,800
Pero hay un paso ms que necesitamos para asignar memoria para ese objeto y es entonces

41
00:02:58,800 --> 00:03:00,930
cuando usamos el nuevo operador.

42
00:03:00,930 --> 00:03:05,600
Por lo tanto, en C-sharp las clases se tratan de manera diferente que los tipos primitivos.

43
00:03:05,850 --> 00:03:09,000
Por lo tanto, debe asignar explcitamente memoria para ellos.

44
00:03:09,450 --> 00:03:16,380
Pero lo bueno es que, a diferencia de los lenguajes como Objective C o C ++, no tiene que preocuparse por la asignacin

45
00:03:16,380 --> 00:03:17,260
de esa memoria.

46
00:03:17,940 --> 00:03:22,170
C-L es nuestro Common Language Runtime que se encargar de eso por usted.

47
00:03:22,230 --> 00:03:27,450
Tiene un proceso llamado recoleccin de basura que elimina automticamente todos los objetos que no se utilizan.

48
00:03:29,220 --> 00:03:35,350
Entonces, para asignar memoria a un objeto, use el nuevo operador y luego repita el tipo de clase y prcticas.

49
00:03:37,070 --> 00:03:42,420
Puede hacer que este cdigo sea un poco ms corto al usar la palabra clave Varg que aprendi

50
00:03:42,420 --> 00:03:48,300
anteriormente y ahora que tenemos un objeto Person podemos acceder a sus miembros como un campo con nombre o el

51
00:03:48,300 --> 00:03:50,130
mtodo introducido usando la notacin de puntos.

52
00:03:50,130 --> 00:03:55,350
Entonces en este ejemplo, configuro el nombre de esta persona y luego llamo al mtodo introducido.

53
00:03:55,860 --> 00:04:01,110
Ahora veamos qu no es un modificador esttico que viste en nuestro primer programa C-Sharp.

54
00:04:01,110 --> 00:04:04,380
As que aqu est la clase de calculadora que viste antes.

55
00:04:04,620 --> 00:04:11,910
Podemos modificar este mtodo con la palabra clave esttica como esta y, como resultado, podemos acceder a ese

56
00:04:12,150 --> 00:04:15,640
mtodo directamente por la propia clase de calculadora.

57
00:04:15,660 --> 00:04:20,030
No tenemos que crear un objeto para acceder a un miembro esttico.

58
00:04:20,040 --> 00:04:24,150
De hecho, no podemos acceder a los miembros estticos de los objetos.

59
00:04:24,150 --> 00:04:25,350
Entonces de que se trata esto.

60
00:04:25,350 --> 00:04:27,180
Porqu necesitamos esto.

61
00:04:27,180 --> 00:04:30,930
Bueno, djame mostrarte lo que est sucediendo detrs de la escena y luego tendrs

62
00:04:30,930 --> 00:04:32,310
una mejor comprensin de esto.

63
00:04:32,340 --> 00:04:39,090
Entonces, sin el modificador esttico cuando crea tres objetos de esta clase de calculadora, cada objeto

64
00:04:39,090 --> 00:04:41,820
en la memoria tendr el mtodo add.

65
00:04:42,300 --> 00:04:48,390
Pero cuando aplica el modificador esttico, el mtodo add estar solo en un lugar en la memoria y

66
00:04:48,570 --> 00:04:50,500
esa es la clase de calculadora.

67
00:04:51,060 --> 00:04:53,960
Por lo tanto, no se repetir tres veces en la memoria.

68
00:04:54,440 --> 00:04:56,100
Por cierto, necesitamos esto.

69
00:04:56,100 --> 00:05:02,310
Usamos el modificador esttico cuando queremos presentar un concepto de que solo una instancia nica de eso debera

70
00:05:02,310 --> 00:05:03,680
existir en la memoria.

71
00:05:04,170 --> 00:05:05,630
Aqu hay un ejemplo.

72
00:05:05,760 --> 00:05:09,150
Recuerde la clase de programa en nuestro primer programa.

73
00:05:09,240 --> 00:05:15,510
Entonces, all tenamos un mtodo principal y Main se modific con la palabra clave static, lo que significa que solo

74
00:05:15,510 --> 00:05:18,470
hay una instancia del mtodo principal en la memoria.

75
00:05:18,740 --> 00:05:23,180
Solo hay un punto de entrada en cada aplicacin C-Sharp.

76
00:05:23,280 --> 00:05:25,830
El da actual es otro ejemplo.

77
00:05:25,980 --> 00:05:32,100
No desea tener mltiples objetos de fecha y hora en la memoria, cada uno de los cuales representa una fecha actual.

78
00:05:32,190 --> 00:05:36,590
Solo quiere un lugar en la memoria donde pueda ver los datos actuales.

79
00:05:37,110 --> 00:05:42,630
As que todo lo que quiero que sepan por el momento es que cuando se modifican los miembros de una clase,

80
00:05:42,660 --> 00:05:49,230
ya sea un campo o un mtodo con un modificador esttico, se podr acceder a ese miembro desde la clase en s, no desde un objeto.

81
00:05:49,950 --> 00:05:51,560
Bueno, ese es tu sabes tres por ahora.

82
00:05:51,720 --> 00:05:53,970
Pasemos a Visual Studio y hagamos algo de codificacin

