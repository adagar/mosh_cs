1
00:00:01,480 --> 00:00:05,350
OK en este video, voy a mostrarte tipos de referencia y tipos de valores en accin.

2
00:00:05,430 --> 00:00:09,780
Voy a usar dos ejemplos diferentes, as que voy a comenzar con uno ms simple.

3
00:00:09,780 --> 00:00:11,920
Primero voy a crear una variable

4
00:00:15,140 --> 00:00:17,250
entera, as que uso 10.

5
00:00:17,280 --> 00:00:25,370
Ahora voy a crear otra variable llamada B y copiar A a B.

6
00:00:26,220 --> 00:00:29,910
Y finalmente voy a incrementar B por 1.

7
00:00:30,210 --> 00:00:34,180
Entonces voy a usar el operador de incremento.

8
00:00:36,030 --> 00:00:37,540
Ahora tengo una pregunta para ti.

9
00:00:37,770 --> 00:00:41,930
Qu crees que el valor de 8 va a ser en este punto?

10
00:00:42,210 --> 00:00:45,140
Va a ser 10 u 11.

11
00:00:45,180 --> 00:00:50,120
La respuesta es 10 porque los enteros son tipos de valores.

12
00:00:50,370 --> 00:00:57,870
Entonces, cuando copiamos un tipo de valor a otra variable, se toma una copia de ese valor y se almacena en la ubicacin

13
00:00:57,870 --> 00:00:59,690
de destino en la memoria.

14
00:00:59,760 --> 00:01:01,420
Entonces, verifiquemos esto.

15
00:01:01,530 --> 00:01:03,920
Voy a utilizar cancelar la lnea derecha.

16
00:01:05,540 --> 00:01:08,570
Y aqu voy a mostrar ayb en la consola.

17
00:01:08,640 --> 00:01:16,620
Cul es una buena manera de mostrar y B podemos utilizar el formato de cadena recordar el formato

18
00:01:17,610 --> 00:01:24,070
de cadena para que la cadena no formatee aqu reabastezca una cadena de formato.

19
00:01:26,970 --> 00:01:34,620
Entonces 0 y 1 aqu son marcadores de posicin y as juegan argumentos para llenar estos marcadores de posicin.

20
00:01:34,620 --> 00:01:38,040
Entonces A y B aqu.

21
00:01:38,220 --> 00:01:44,120
Ahora ejecutemos la aplicacin con control y F5.

22
00:01:44,220 --> 00:01:49,400
As que mira el uso 10 y 11.

23
00:01:49,470 --> 00:01:53,910
Entonces la leccin es cuando copias un tipo de valor a una variable diferente.

24
00:01:54,080 --> 00:01:59,570
Se toma una copia de ese valor y se almacena en la variable objetivo.

25
00:01:59,580 --> 00:02:01,900
Es por eso que los llamamos tipos de valor.

26
00:02:01,920 --> 00:02:04,270
Sus valores estn copiados.

27
00:02:04,350 --> 00:02:06,880
Djame mostrarte lo que acaba de pasar en la memoria.

28
00:02:06,990 --> 00:02:08,670
Entonces imagina que aqu est la pila.

29
00:02:08,670 --> 00:02:12,440
Y en algn lugar de la pila tenemos una ubicacin identificada por a.

30
00:02:12,570 --> 00:02:19,830
Y en esa ubicacin tenemos el valor 10 cuando copiamos para que sea una nueva ubicacin en la memoria y la pila se crea

31
00:02:20,400 --> 00:02:25,450
identificada como B y el valor que tenamos all en a se copia para que sea.

32
00:02:25,740 --> 00:02:31,650
Es por eso que estas dos variables ahora son completamente independientes y hacer un cambio en una no

33
00:02:31,800 --> 00:02:33,600
tiene impacto en la otra.

34
00:02:33,600 --> 00:02:34,290
Ahora veamos.

35
00:02:34,320 --> 00:02:36,910
Tipos de referencia en accin.

36
00:02:37,140 --> 00:02:39,990
As que esta vez voy a crear una matriz de enteros.

37
00:02:40,260 --> 00:02:44,010
Y como saben en C-sharp una matriz es una clase.

38
00:02:44,010 --> 00:02:45,390
Entonces es un tipo de referencia.

39
00:02:45,960 --> 00:02:48,000
As que vamos a

40
00:02:51,960 --> 00:02:54,120
crear una matriz aqu.

41
00:02:54,120 --> 00:03:01,040
Estoy usando la sintaxis de inicializacin de objetos para inicializar mi matriz con uno dos tres.

42
00:03:01,080 --> 00:03:04,890
Ahora copio esta matriz en otra variable llamada matriz 2

43
00:03:10,740 --> 00:03:14,850
y finalmente voy a hacer una modificacin en la matriz 2.

44
00:03:14,850 --> 00:03:17,460
Digamos que quiero establecer el primer elemento

45
00:03:23,460 --> 00:03:28,980
en cero en este punto, cul crees que ser el primer elemento de la matriz 1?

46
00:03:29,040 --> 00:03:34,550
Va a ser 1 o 0 va a ser 0.

47
00:03:34,680 --> 00:03:38,940
Regresemos a la visualizacin de memoria nuevamente y veamos qu sucede cuando ejecuta este cdigo.

48
00:03:39,270 --> 00:03:41,670
As que aqu tenemos pila y pila.

49
00:03:42,090 --> 00:03:48,000
Cuando creamos e inicializamos la matriz 1, esto es lo que va a pasar primero, un objeto

50
00:03:48,000 --> 00:03:49,930
se crear en el montn.

51
00:03:50,130 --> 00:03:52,920
Este objeto est en una ubicacin de memoria con esa direccin.

52
00:03:52,920 --> 00:03:58,550
Usted ve aqu y dentro de esta ubicacin de memoria tenemos la matriz real con tres elementos.

53
00:03:58,580 --> 00:04:00,430
Uno dos tres.

54
00:04:00,750 --> 00:04:09,210
A continuacin, el tiempo de ejecucin o ACL crean una viabilidad en la pila identificada como matriz uno el valor dentro de esta variable o

55
00:04:09,210 --> 00:04:15,750
dentro de esta ubicacin de memoria es una direccin de memoria y esa es la direccin del objeto en

56
00:04:15,750 --> 00:04:16,330
el montn.

57
00:04:16,380 --> 00:04:17,840
La matriz real

58
00:04:18,240 --> 00:04:20,850
Entonces la matriz quiere puntos o referencias.

59
00:04:20,850 --> 00:04:22,850
El objeto en el montn.

60
00:04:22,920 --> 00:04:27,330
Entonces esto es lo que sucede cuando creamos e iniciamos la matriz uno.

61
00:04:27,360 --> 00:04:32,160
Ahora veamos qu sucede cuando copiamos la matriz 1 a 2.

62
00:04:32,460 --> 00:04:39,720
Entonces, el tiempo de ejecucin crea otra variable en la pila identificada como Array 2 y nuevamente dentro de esta variable.

63
00:04:39,780 --> 00:04:42,010
Vamos a tener una direccin de memoria.

64
00:04:42,540 --> 00:04:47,770
Y como puede ver en esta imagen, esta direccin es la direccin del objeto en el montn.

65
00:04:47,790 --> 00:04:51,630
Es por eso que tanto la matriz 1 como la matriz 2 apuntan al mismo objeto.

66
00:04:51,930 --> 00:04:57,930
Lo que significa que cuando hacemos cambios en este objeto en el montn a travs de cada

67
00:04:57,960 --> 00:05:02,850
referencia o matriz dos, los cambios son visibles a travs de la otra variable.

68
00:05:02,910 --> 00:05:05,610
Es por eso que llamamos a estos tipos tipos de referencia.

69
00:05:05,760 --> 00:05:10,080
Entonces, cuando los copiamos, se hace referencia a ellos o se copia su direccin de memoria.

70
00:05:10,080 --> 00:05:12,240
Ahora el valor real.

71
00:05:12,330 --> 00:05:13,420
As que volvamos al cdigo.

72
00:05:13,440 --> 00:05:14,630
Verifiquemos esto.

73
00:05:14,880 --> 00:05:19,860
De nuevo, voy a utilizar Konsole en la lnea derecha de la cadena del formato, as

74
00:05:35,680 --> 00:05:41,800
que mostrar que el primer elemento de ambos son A1 y el conjunto dos, y ambos deben ser 0.

75
00:05:41,980 --> 00:05:45,510
Eso es ejecutar la aplicacin.

76
00:05:46,020 --> 00:05:47,060
Ambos son cero

