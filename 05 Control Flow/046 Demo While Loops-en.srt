1
00:00:01,180 --> 00:00:01,770
OK.

2
00:00:01,770 --> 00:00:07,740
Earlier we wrote this simple program to display the list of even numbers between 1 to 10 using a for

3
00:00:07,740 --> 00:00:08,430
loop.

4
00:00:08,830 --> 00:00:15,260
And they told you during the slides that you can write the same code with for a while or do Y loop.

5
00:00:15,270 --> 00:00:19,950
So now I'm going to write the same program using a while loop because before we get started I want to

6
00:00:19,950 --> 00:00:21,670
comment out this code.

7
00:00:21,750 --> 00:00:22,230
So

8
00:00:25,400 --> 00:00:27,820
OK first let's declare a counter variable.

9
00:00:27,990 --> 00:00:29,070
So I.

10
00:00:29,250 --> 00:00:34,980
Is zero while I is less than or equal to 10

11
00:00:37,620 --> 00:00:38,670
now or condition

12
00:00:43,260 --> 00:00:44,950
will display I on the console.

13
00:00:45,030 --> 00:00:52,540
If it's an even number and here we need to increment I buy one.

14
00:00:53,040 --> 00:00:57,260
So this is the exact same code but written using a while loop.

15
00:00:57,870 --> 00:01:03,900
Now in this case I prefer to use a for loop or the scenario because typically we use the for loop when

16
00:01:03,900 --> 00:01:08,060
we know the number of times we would like to do an iteration.

17
00:01:08,190 --> 00:01:12,130
So it's cleaner to declare that count viable like I.

18
00:01:12,630 --> 00:01:19,140
When you are declaring the four block as opposed to outside the wire loop as we have here.

19
00:01:19,880 --> 00:01:20,190
OK.

20
00:01:20,180 --> 00:01:23,270
Now you might be wondering when do we use the while loop.

21
00:01:23,550 --> 00:01:29,670
Well there is no hard and fast rule but typically it's better to use a while loop when you don't know

22
00:01:29,670 --> 00:01:34,480
ahead of time how many times you're going to do an iteration.

23
00:01:34,500 --> 00:01:36,370
Let me show you an example here.

24
00:01:36,390 --> 00:01:39,720
So first let me clean up this code.

25
00:01:41,430 --> 00:01:47,340
We want to write a simple code program and this program we're going to display a message on the console

26
00:01:47,610 --> 00:01:54,140
asking the user to type their name if the user types the name the console is going to repeat or a code

27
00:01:54,150 --> 00:01:55,000
that name.

28
00:01:55,470 --> 00:02:00,630
But if a user simply presses enter without typing a name the program is going to terminate.

29
00:02:00,630 --> 00:02:05,760
So in this case we don't know ahead of time how many times the user is going to use the program.

30
00:02:05,850 --> 00:02:10,840
How many times are we going to echo in that case it's better to use a while loop.

31
00:02:10,890 --> 00:02:12,440
So how do we do that.

32
00:02:12,450 --> 00:02:15,230
So in this case we are not going to have a counter variable.

33
00:02:15,570 --> 00:02:16,910
So instead what I'm going to do.

34
00:02:17,070 --> 00:02:23,310
I'm declaring a while and in that condition I'm just going to use True which means this loop is going

35
00:02:23,310 --> 00:02:25,960
to execute forever.

36
00:02:26,280 --> 00:02:30,460
Let me display a simple message on the console so console that.

37
00:02:30,480 --> 00:02:31,290
Right.

38
00:02:31,510 --> 00:02:34,700
So I'm going to use the right method instead of right.

39
00:02:34,860 --> 00:02:38,410
The difference is the cursor is going to be on the same line.

40
00:02:38,600 --> 00:02:41,680
You're not going to have a line break.

41
00:02:41,970 --> 00:02:51,910
So Type your name let me run this program and see what happens.

42
00:02:51,960 --> 00:02:58,290
So you see this program is executing forever because that why loop is not terminating and the program

43
00:02:58,290 --> 00:03:02,000
keeps displaying type your name.

44
00:03:02,430 --> 00:03:06,870
So let me terminate this.

45
00:03:07,140 --> 00:03:10,140
So at this point we need to read something from the console.

46
00:03:10,470 --> 00:03:15,980
So we use console not the read line method and this method.

47
00:03:16,020 --> 00:03:17,220
Take a look at it signature.

48
00:03:17,220 --> 00:03:19,540
So I remove the parenthesis.

49
00:03:19,560 --> 00:03:20,940
I open it again.

50
00:03:21,150 --> 00:03:23,730
Look at the tooltip.

51
00:03:24,240 --> 00:03:26,300
This method returns a string.

52
00:03:26,670 --> 00:03:33,290
So we can store the result in a string called input.

53
00:03:33,300 --> 00:03:40,500
Now if the user simply presses enter and do not type a name that input is going to be an empty string

54
00:03:41,270 --> 00:03:49,630
or if that's the case it's the time to jump out of the loop so to check if a string is empty.

55
00:03:49,770 --> 00:03:55,970
We often use string dot is null or whitespace method.

56
00:03:56,700 --> 00:04:01,360
This method expects a string and returns a boolean value.

57
00:04:01,650 --> 00:04:06,490
So if input is null or whitespace then this condition is true.

58
00:04:06,510 --> 00:04:10,590
And then at this point we're going to break and we break.

59
00:04:10,590 --> 00:04:13,720
We jump out of a loop.

60
00:04:13,800 --> 00:04:18,460
Otherwise if that does not happen we want to echo the name.

61
00:04:18,460 --> 00:04:23,080
So cancel the right line echo.

62
00:04:24,050 --> 00:04:28,500
And now we are going to append the input here.

63
00:04:28,620 --> 00:04:33,730
Let's run this application.

64
00:04:34,840 --> 00:04:36,110
So Type your name.

65
00:04:36,210 --> 00:04:39,410
Marsh echo Marsh.

66
00:04:39,540 --> 00:04:46,080
Note that the program continues execution but this time I type John and it echoes John.

67
00:04:46,080 --> 00:04:51,220
Now this time I'm going to press enter and the program terminated.

68
00:04:52,260 --> 00:04:58,250
One of the questions beginners ask me is how does this press any key to continue up here here.

69
00:04:58,320 --> 00:04:59,990
I didn't write any code for that.

70
00:05:00,150 --> 00:05:06,330
When you run your application using control and F5 by default when the application terminates the console

71
00:05:06,330 --> 00:05:08,860
displays that message for you.

72
00:05:09,440 --> 00:05:14,900
OK now I'm going to change this program a little bit so we can learn about the continued keyword.

73
00:05:15,690 --> 00:05:20,200
So what I'm going to do here is I'm going to apply and not operator here.

74
00:05:20,280 --> 00:05:26,610
So if the input is not now or whitespace in that case we want to echo it right.

75
00:05:26,640 --> 00:05:30,730
So let's not worry about this break.

76
00:05:30,930 --> 00:05:34,520
I'm going to move this concept the right line here.

77
00:05:34,650 --> 00:05:37,260
Now I'm going to put that break here.

78
00:05:38,160 --> 00:05:40,130
So what do you think is going to happen now.

79
00:05:40,380 --> 00:05:45,600
When we were on application first we get this message type your name we type a name.

80
00:05:45,600 --> 00:05:47,280
Of course it's not Nailor whitespace.

81
00:05:47,280 --> 00:05:48,490
We're going to get an echo.

82
00:05:48,570 --> 00:05:52,590
But then we get to this statement and that causes the loop to terminate.

83
00:05:52,590 --> 00:05:56,190
So this program is going to execute only once.

84
00:05:56,190 --> 00:05:59,720
How can we change this so it can behave like before.

85
00:05:59,820 --> 00:06:01,810
That's when we use to continue a keyword.

86
00:06:01,920 --> 00:06:06,810
So I'm going to put the continue here and let me explain what happens.

87
00:06:06,810 --> 00:06:14,400
So at this point after we call the name when the program sees this continue instead of continuing here

88
00:06:15,780 --> 00:06:18,530
it's going to continue to the beginning of the loop.

89
00:06:18,720 --> 00:06:21,680
So we get by here and the condition is true.

90
00:06:21,960 --> 00:06:24,570
So the loop continues to execute.

91
00:06:24,810 --> 00:06:29,520
Let's run the program.

92
00:06:29,520 --> 00:06:30,500
Type your name.

93
00:06:30,500 --> 00:06:31,360
Marsh.

94
00:06:32,130 --> 00:06:34,130
The loop is continuing.

95
00:06:34,140 --> 00:06:36,330
Type your name John.

96
00:06:36,470 --> 00:06:40,780
Now this time just press enter and the loop terminate.

97
00:06:40,860 --> 00:06:44,760
So as usual we can write the same program in different ways.

98
00:06:44,760 --> 00:06:50,160
Sometimes you may apply and not operator and because of that you may have to use the break or continue

99
00:06:50,850 --> 00:06:52,600
which one is right which one is wrong.

100
00:06:52,650 --> 00:06:54,450
There is really no right or wrong.

101
00:06:54,900 --> 00:06:59,980
You need to do your own judgment which code is more readable and more understandable.

