1
00:00:01,080 --> 00:00:06,240
OK first I start by defining a viable and call it hour and send it to 10.

2
00:00:06,240 --> 00:00:11,490
My intention is to define hour as a 24 hour time format.

3
00:00:11,490 --> 00:00:20,810
Now I can say if our is greater than zero and it's less than 12 Konsole right line.

4
00:00:21,330 --> 00:00:22,960
It's morning.

5
00:00:23,790 --> 00:00:31,860
So as you see I put the expression here that is a boolean expression I'm using and here.

6
00:00:31,860 --> 00:00:40,100
So these two conditions will be evaluated and if both are true then these will be executed.

7
00:00:40,770 --> 00:00:42,790
Now I can have another condition.

8
00:00:43,140 --> 00:00:43,590
So I write.

9
00:00:43,620 --> 00:00:58,430
Else if our is greater than or equal to 12 and it's less than 18 which is 6 pm right line afternoon

10
00:00:58,430 --> 00:01:00,220
.

11
00:01:01,230 --> 00:01:03,970
And finally I can have an else statement.

12
00:01:04,140 --> 00:01:11,070
So if none of the earlier conditions is true then this piece of code will be executed.

13
00:01:11,070 --> 00:01:19,170
So it's evening as I told you if you have more than one line of code you need to enclose them in curly

14
00:01:19,170 --> 00:01:20,180
braces.

15
00:01:20,430 --> 00:01:27,180
But some people say even if you have one line of code it's good practice to put them in curly braces

16
00:01:27,330 --> 00:01:28,980
like this.

17
00:01:29,340 --> 00:01:30,240
Similar here

18
00:01:35,650 --> 00:01:37,620
they go.

19
00:01:38,220 --> 00:01:43,390
Let's run this program is in control and F5.

20
00:01:43,860 --> 00:01:46,460
So it's morning.

21
00:01:46,680 --> 00:01:51,910
In this case because the hour was 10 this condition was evaluated and it was true.

22
00:01:52,020 --> 00:01:54,560
So this piece of code was executed.

23
00:01:55,320 --> 00:01:58,170
Now let's take a look at conditional operator.

24
00:01:58,230 --> 00:01:59,760
I'm going to change this piece of code.

25
00:01:59,940 --> 00:02:08,910
So first let me clean this up with the sharper we use control and double you to select some piece of

26
00:02:08,910 --> 00:02:10,510
code like this.

27
00:02:10,590 --> 00:02:12,000
It's really easy.

28
00:02:12,000 --> 00:02:17,630
It's much easier than putting the cursor here and using shift and down arrow like that.

29
00:02:18,120 --> 00:02:23,940
So anywhere you are in the code you can just control w to select a piece of code or keep extending your

30
00:02:23,940 --> 00:02:26,670
selection like this.

31
00:02:26,850 --> 00:02:28,190
OK.

32
00:02:28,470 --> 00:02:32,360
Now let's take a look at conditional operator so I can define a ball.

33
00:02:32,370 --> 00:02:36,470
Say is gold customer and set it to true.

34
00:02:36,960 --> 00:02:43,450
I want to say if is gold customer I want to have a float here.

35
00:02:43,800 --> 00:02:46,240
Call it price.

36
00:02:46,920 --> 00:02:52,360
And here I say price is going to be nineteen ninety five dollars.

37
00:02:52,540 --> 00:03:00,480
Otherwise price is going to be twenty nine ninety five dollars.

38
00:03:00,540 --> 00:03:04,250
Now I can rewrite this code using a conditional operator.

39
00:03:04,560 --> 00:03:09,420
So I would say float price equals put the condition.

40
00:03:09,420 --> 00:03:13,950
Here is gold customer followed by a question mark.

41
00:03:13,950 --> 00:03:17,050
Now if that condition is true what do I want I want.

42
00:03:17,070 --> 00:03:22,350
Nineteen ninety five dollars else is specified using a colon.

43
00:03:22,350 --> 00:03:26,890
The price is going to be twenty nine ninety five dollars.

44
00:03:26,900 --> 00:03:28,710
And of course I can't get rid of this.

45
00:03:28,740 --> 00:03:30,190
I just commented.

46
00:03:30,980 --> 00:03:33,860
I keep it here so you can see them for comparison.

47
00:03:34,320 --> 00:03:38,460
And finally put the price on the console.

48
00:03:39,660 --> 00:03:41,710
So let's review one more time.

49
00:03:42,510 --> 00:03:43,710
That's the condition.

50
00:03:43,890 --> 00:03:50,350
If that's true then what we have after question mark and before the colon will be executed.

51
00:03:50,550 --> 00:03:58,700
So 1995 will be returned and assign to the price variable otherwise is specified using a colon.

52
00:03:58,920 --> 00:04:03,710
And here what we put here will be returned and set to the price here.

53
00:04:03,720 --> 00:04:09,890
So is it just a shortcut to write an IF statement let's run the application.

54
00:04:10,770 --> 00:04:16,680
So the price is $19 because I am a customer.

55
00:04:16,680 --> 00:04:19,110
Now let's take a look at switch case.

56
00:04:19,110 --> 00:04:28,910
So with resharpen I use control and W to select everything here and clean it up.

57
00:04:29,010 --> 00:04:31,800
So actually let me define an enumeration first

58
00:04:35,490 --> 00:04:38,780
public income season.

59
00:04:39,810 --> 00:04:40,850
So we have four seasons.

60
00:04:40,860 --> 00:04:45,260
Spring Summer Autumn and Winter.

61
00:04:45,510 --> 00:04:50,240
In this case we don't really need to give an explicit value to each of these items here because you're

62
00:04:50,270 --> 00:04:56,280
not working with a database or an external application where there is a numerical representation for

63
00:04:56,310 --> 00:04:57,200
the seasons.

64
00:04:57,420 --> 00:05:02,280
So if we just leave it like that and to keep my code clean I would like to put this in a separate file

65
00:05:02,760 --> 00:05:06,040
so we'd resharpen what I can do is I put the cursor here.

66
00:05:06,330 --> 00:05:09,400
And as you see I've got this marker here.

67
00:05:09,510 --> 00:05:16,060
So with Altan enter I can activate that and press enter and move it to another file.

68
00:05:16,230 --> 00:05:20,820
If you don't have resharpened Why do you need to do is to go to solution explorer here.

69
00:05:21,290 --> 00:05:28,670
Right click your project go to add new item.

70
00:05:28,740 --> 00:05:33,090
And here you select a class to add a new class.

71
00:05:33,360 --> 00:05:37,980
Let's call it Season 2 because I already have a file called season that's yes.

72
00:05:38,010 --> 00:05:40,800
So I put that new class here.

73
00:05:40,920 --> 00:05:48,450
Now I'm using an enumeration model class so I can get rid of this and then I can just go here and copy

74
00:05:48,450 --> 00:05:54,590
this piece of code and put it into the file here.

75
00:05:54,960 --> 00:05:58,200
So as you see it's much easier and faster to use resharpen.

76
00:05:58,530 --> 00:05:58,830
All right.

77
00:05:58,830 --> 00:06:00,300
I'm just going to get rid of this file

78
00:06:04,230 --> 00:06:06,500
and delete it here.

79
00:06:07,440 --> 00:06:07,980
OK.

80
00:06:08,100 --> 00:06:12,530
So we define an enumeration called season with or values here.

81
00:06:12,570 --> 00:06:15,940
Now let's go to program.

82
00:06:16,320 --> 00:06:20,750
I'm going to define a variable this time I'm going to use var college season.

83
00:06:20,940 --> 00:06:24,420
Set it to season dot autumn.

84
00:06:24,510 --> 00:06:28,590
Now let's put a switch on season so each season.

85
00:06:28,860 --> 00:06:32,770
So we put the variable in parenthesis.

86
00:06:33,000 --> 00:06:37,740
Here we have a block and we can have one or more case statements.

87
00:06:37,860 --> 00:06:53,280
I can say if season is season the autumn display on the console it's autumn and a beautiful season.

88
00:06:53,280 --> 00:06:56,880
I termly this case block with a break statement.

89
00:06:56,940 --> 00:07:03,720
Now I can have another case statement here if season is summer.

90
00:07:04,580 --> 00:07:14,030
Customer writes line say it's perfect time to go to beach and break.

91
00:07:14,130 --> 00:07:22,530
Finally I can have a default here so if the season is none of his values I can say I don't understand

92
00:07:22,530 --> 00:07:25,120
that season.

93
00:07:25,300 --> 00:07:28,370
It's a little bit stupid but that's just for demonstration.

94
00:07:28,380 --> 00:07:30,990
And of course we need a break statement here.

95
00:07:31,140 --> 00:07:34,040
Let's run this application now.

96
00:07:35,940 --> 00:07:39,200
So it says it's autumn and a beautiful season.

97
00:07:39,210 --> 00:07:40,820
Now let me show you something.

98
00:07:41,730 --> 00:07:45,080
Let's say in autumn and summer we would like to have a promotion.

99
00:07:45,360 --> 00:07:53,970
So instead of displaying this message here we would like to say something like we've got promotion and

100
00:07:53,970 --> 00:08:02,910
I would like to have the exact same message appear if the summer if the season is summer as you see

101
00:08:02,970 --> 00:08:05,040
this piece of code looks like a duplicate.

102
00:08:05,190 --> 00:08:06,500
It's not a good thing.

103
00:08:06,780 --> 00:08:13,620
What we can do here is to get rid of these statements here and have these two case statements next to

104
00:08:13,620 --> 00:08:14,470
each other.

105
00:08:14,490 --> 00:08:21,240
Note that the first one got nothing next to it and the second one has the actual code that will be executed

106
00:08:21,260 --> 00:08:21,440
.

107
00:08:21,600 --> 00:08:27,600
So in this case what that means is the if the season is autumn or summer then this piece of code will

108
00:08:27,600 --> 00:08:29,430
be executed.

109
00:08:29,430 --> 00:08:32,200
Let's run the application.

110
00:08:32,820 --> 00:08:35,690
We've got promotion.

111
00:08:36,210 --> 00:08:37,170
That's it for this video.

112
00:08:37,170 --> 00:08:38,020
I hope you enjoyed it.

113
00:08:38,040 --> 00:08:39,630
And thank you for watching.

