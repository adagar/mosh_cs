1
00:00:01,180 --> 00:00:01,770
DE ACUERDO.

2
00:00:01,770 --> 00:00:07,740
Anteriormente escribimos este sencillo programa para mostrar la lista de nmeros pares entre 1 y 10 usando un

3
00:00:07,740 --> 00:00:08,430
ciclo for.

4
00:00:08,830 --> 00:00:15,260
Y le dijeron durante las diapositivas que puede escribir el mismo cdigo por un tiempo o hacer un bucle en Y.

5
00:00:15,270 --> 00:00:19,950
As que ahora voy a escribir el mismo programa usando un ciclo while porque antes

6
00:00:19,950 --> 00:00:21,670
de comenzar quiero comentar este cdigo.

7
00:00:21,750 --> 00:00:22,230
As

8
00:00:25,400 --> 00:00:27,820
que bien, primero declaremos una variable de contador.

9
00:00:27,990 --> 00:00:29,070
Asique.

10
00:00:29,250 --> 00:00:34,980
Es cero mientras que I es menor o igual a 10 ahora o la

11
00:00:37,620 --> 00:00:38,670
condicin mostrar

12
00:00:43,260 --> 00:00:44,950
I en la consola.

13
00:00:45,030 --> 00:00:52,540
Si se trata de un nmero par y aqu necesitamos aumentar, compro uno.

14
00:00:53,040 --> 00:00:57,260
As que este es exactamente el mismo cdigo pero escrito usando un ciclo while.

15
00:00:57,870 --> 00:01:03,900
Ahora, en este caso, prefiero usar un bucle for o el escenario porque normalmente usamos el bucle for

16
00:01:03,900 --> 00:01:08,060
cuando sabemos la cantidad de veces que nos gustara hacer una iteracin.

17
00:01:08,190 --> 00:01:12,130
Entonces, es ms limpio declarar que la cuenta es viable como yo.

18
00:01:12,630 --> 00:01:19,140
Cuando declaras los cuatro bloques en lugar de afuera del lazo de alambre como tenemos aqu.

19
00:01:19,880 --> 00:01:20,190
DE ACUERDO.

20
00:01:20,180 --> 00:01:23,270
Ahora se estar preguntando cundo usamos el ciclo while.

21
00:01:23,550 --> 00:01:29,670
Bueno, no existe una regla rgida pero, por lo general, es mejor usar un ciclo while

22
00:01:29,670 --> 00:01:34,480
cuando no sabes con anticipacin cuntas veces vas a hacer una iteracin.

23
00:01:34,500 --> 00:01:36,370
Djame mostrarte un ejemplo aqu.

24
00:01:36,390 --> 00:01:39,720
As que primero djame limpiar este cdigo.

25
00:01:41,430 --> 00:01:47,340
Queremos escribir un programa de cdigo simple y este programa vamos a mostrar un mensaje en la consola pidindole

26
00:01:47,610 --> 00:01:54,140
al usuario que escriba su nombre si el usuario escribe el nombre que la consola va a repetir o un cdigo

27
00:01:54,150 --> 00:01:55,000
con ese nombre.

28
00:01:55,470 --> 00:02:00,630
Pero si un usuario simplemente presiona ingresar sin escribir un nombre, el programa va a terminar.

29
00:02:00,630 --> 00:02:05,760
Entonces, en este caso, no sabemos de antemano cuntas veces el usuario va a usar el programa.

30
00:02:05,850 --> 00:02:10,840
Cuntas veces vamos a hacer eco en ese caso, es mejor usar un ciclo while.

31
00:02:10,890 --> 00:02:12,440
Entonces cmo hacemos eso.

32
00:02:12,450 --> 00:02:15,230
Entonces, en este caso, no vamos a tener una variable contraria.

33
00:02:15,570 --> 00:02:16,910
Entonces, en cambio, qu voy a hacer.

34
00:02:17,070 --> 00:02:23,310
Estoy declarando un tiempo y en esa condicin solo voy a usar True, lo que significa

35
00:02:23,310 --> 00:02:25,960
que este ciclo se ejecutar para siempre.

36
00:02:26,280 --> 00:02:30,460
Permtanme mostrar un mensaje simple en la consola para consolar eso.

37
00:02:30,480 --> 00:02:31,290
Derecha.

38
00:02:31,510 --> 00:02:34,700
Por lo tanto, voy a utilizar el mtodo correcto en lugar del correcto.

39
00:02:34,860 --> 00:02:38,410
La diferencia es que el cursor va a estar en la misma lnea.

40
00:02:38,600 --> 00:02:41,680
No vas a tener un salto de lnea.

41
00:02:41,970 --> 00:02:51,910
As que escribe tu nombre, djame ejecutar este programa y ver qu pasa.

42
00:02:51,960 --> 00:02:58,290
Entonces, ves que este programa se ejecuta para siempre porque es por eso que el bucle

43
00:02:58,290 --> 00:03:02,000
no termina y el programa sigue mostrando tu nombre.

44
00:03:02,430 --> 00:03:06,870
As que djame terminar esto.

45
00:03:07,140 --> 00:03:10,140
Entonces, en este punto, debemos leer algo de la consola.

46
00:03:10,470 --> 00:03:15,980
Entonces usamos la consola, no el mtodo de lnea de lectura y este mtodo.

47
00:03:16,020 --> 00:03:17,220
Eche un vistazo a la firma.

48
00:03:17,220 --> 00:03:19,540
Entonces elimino el parntesis.

49
00:03:19,560 --> 00:03:20,940
Lo abro de nuevo

50
00:03:21,150 --> 00:03:23,730
Mira la informacin sobre herramientas.

51
00:03:24,240 --> 00:03:26,300
Este mtodo devuelve una cadena.

52
00:03:26,670 --> 00:03:33,290
Entonces podemos almacenar el resultado en una cadena llamada entrada.

53
00:03:33,300 --> 00:03:40,500
Ahora, si el usuario simplemente presiona enter y no escribe un nombre, esa entrada va a ser una cadena

54
00:03:41,270 --> 00:03:49,630
vaca o si ese es el caso, es el momento de saltar fuera del ciclo para verificar si una cadena est vaca.

55
00:03:49,770 --> 00:03:55,970
A menudo usamos string dot es un mtodo nulo o de espacio en blanco.

56
00:03:56,700 --> 00:04:01,360
Este mtodo espera una cadena y devuelve un valor booleano.

57
00:04:01,650 --> 00:04:06,490
Entonces, si la entrada es nula o en blanco, entonces esta condicin es verdadera.

58
00:04:06,510 --> 00:04:10,590
Y luego, en este punto, vamos a romper y nos romperemos.

59
00:04:10,590 --> 00:04:13,720
Saltamos de un bucle.

60
00:04:13,800 --> 00:04:18,460
De lo contrario, si eso no sucede queremos hacernos eco del nombre.

61
00:04:18,460 --> 00:04:23,080
As que cancela el eco de la lnea derecha.

62
00:04:24,050 --> 00:04:28,500
Y ahora vamos a anexar la entrada aqu.

63
00:04:28,620 --> 00:04:33,730
Vamos a ejecutar esta aplicacin.

64
00:04:34,840 --> 00:04:36,110
Entonces escribe tu nombre.

65
00:04:36,210 --> 00:04:39,410
Marsh se hace eco de Marsh.

66
00:04:39,540 --> 00:04:46,080
Tenga en cuenta que el programa contina la ejecucin, pero esta vez escribo John y se hace eco de John.

67
00:04:46,080 --> 00:04:51,220
Ahora, esta vez presionar enter y el programa terminar.

68
00:04:52,260 --> 00:04:58,250
Una de las preguntas que me hacen los principiantes es cmo hace para presionar cualquier tecla para continuar aqu.

69
00:04:58,320 --> 00:04:59,990
No escrib ningn cdigo para eso.

70
00:05:00,150 --> 00:05:06,330
Cuando ejecuta su aplicacin con control y F5 de manera predeterminada cuando la aplicacin finaliza, la

71
00:05:06,330 --> 00:05:08,860
consola muestra ese mensaje por usted.

72
00:05:09,440 --> 00:05:14,900
Bien, ahora voy a cambiar este programa un poco para que podamos aprender sobre la palabra clave continua.

73
00:05:15,690 --> 00:05:20,200
Entonces, lo que voy a hacer aqu es aplicar y no operar aqu.

74
00:05:20,280 --> 00:05:26,610
Entonces, si la entrada no es ahora o el espacio en blanco en ese caso, queremos hacer un eco correcto.

75
00:05:26,640 --> 00:05:30,730
As que no nos preocupemos por este descanso.

76
00:05:30,930 --> 00:05:34,520
Voy a mover este concepto a la lnea derecha aqu.

77
00:05:34,650 --> 00:05:37,260
Ahora voy a poner ese descanso aqu.

78
00:05:38,160 --> 00:05:40,130
Entonces, qu crees que va a pasar ahora?

79
00:05:40,380 --> 00:05:45,600
Cuando estbamos en la aplicacin primero, recibimos este mensaje, escribimos su nombre, escribimos un nombre.

80
00:05:45,600 --> 00:05:47,280
Por supuesto que no es espacio en blanco de Nailor.

81
00:05:47,280 --> 00:05:48,490
Vamos a tener un eco.

82
00:05:48,570 --> 00:05:52,590
Pero luego llegamos a esta declaracin y eso hace que el ciclo termine.

83
00:05:52,590 --> 00:05:56,190
Entonces, este programa se ejecutar solo una vez.

84
00:05:56,190 --> 00:05:59,720
Cmo podemos cambiar esto para que pueda comportarse como antes?

85
00:05:59,820 --> 00:06:01,810
Es entonces cuando utilizamos para continuar una palabra clave.

86
00:06:01,920 --> 00:06:06,810
As que voy a poner el continuar aqu y dejarme explicar lo que sucede.

87
00:06:06,810 --> 00:06:14,400
Entonces, en este punto, despus de llamar el nombre cuando el programa vea esto continuar en lugar de continuar

88
00:06:15,780 --> 00:06:18,530
aqu, continuar hasta el comienzo del ciclo.

89
00:06:18,720 --> 00:06:21,680
As que pasamos por aqu y la condicin es verdadera.

90
00:06:21,960 --> 00:06:24,570
Entonces el ciclo contina ejecutndose.

91
00:06:24,810 --> 00:06:29,520
Vamos a ejecutar el programa.

92
00:06:29,520 --> 00:06:30,500
Escriba su nombre.

93
00:06:30,500 --> 00:06:31,360
Pantano.

94
00:06:32,130 --> 00:06:34,130
El ciclo contina.

95
00:06:34,140 --> 00:06:36,330
Escriba su nombre John.

96
00:06:36,470 --> 00:06:40,780
Ahora esta vez solo presione enter y el ciclo termina.

97
00:06:40,860 --> 00:06:44,760
Como de costumbre, podemos escribir el mismo programa de diferentes maneras.

98
00:06:44,760 --> 00:06:50,160
A veces puede solicitar y no el operador y debido a eso puede tener que usar el descanso o continuar cul

99
00:06:50,850 --> 00:06:52,600
es el correcto, cul es el incorrecto.

100
00:06:52,650 --> 00:06:54,450
Realmente no hay correcto o incorrecto.

101
00:06:54,900 --> 00:06:59,980
Debe hacer su propio juicio, qu cdigo es ms legible y ms comprensible.

